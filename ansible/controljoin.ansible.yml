- name: Add private keys
  hosts: rpi5s
  tasks:
    - name: Add private key
      ansible.builtin.copy:
        src: /home/kashyap/.ssh/rpi_cluster_inter
        dest: /home/k/.ssh/rpi_cluster_inter
        owner: k
        group: k
        mode: '0400'
    - name: Add authorized key
      ansible.posix.authorized_key:
        user: k
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM/p2cyQhjfVyBtdzknLNFaFvOk5B+M++M24ZZCwajQ6"
        state: present
- name: Sync certificates
  hosts: kupi_control_plane_joiners
  become: true
  vars:
    cert_files:
      - /etc/kubernetes/pki/ca.crt
      - /etc/kubernetes/pki/ca.key
      - /etc/kubernetes/pki/sa.key
      - /etc/kubernetes/pki/sa.pub
      - /etc/kubernetes/pki/front-proxy-ca.crt
      - /etc/kubernetes/pki/front-proxy-ca.key
      - /etc/kubernetes/pki/etcd/ca.crt
      - /etc/kubernetes/pki/etcd/ca.key
  tasks:
    - name: Ensure destination dirs are present
      ansible.builtin.file:
        path: "{{ item | dirname }}"
        state: directory
      loop: "{{ cert_files }}"
    - name: Copy certificates
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ item }}"
        private_key: /home/k/.ssh/rpi_cluster_inter
      delegate_to: rpi5_01
      loop: "{{ cert_files }}"
- name: Join control plane nodes
  hosts: kupi_control_plane_joiners
  become: true
  tasks:
    - name: Join control plane nodes
      ansible.builtin.command:
        argv:
          - kubeadm
          - join
          - kupi.k.it:6443
          - --token
          - "{{ lookup('env', 'KUPI_JOIN_TOKEN') }}"
          - --discovery-token-ca-cert-hash
          - "{{ lookup('env', 'KUPI_CA_HASH') }}"
          - --control-plane
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_join_out
    - name: Save output to local
      ansible.builtin.copy:
        content: "{{ kubeadm_join_out.stdout }}"
        dest: ./kubeadm_join_out.txt
        owner: k
        group: k
        mode: "0600"
      when: kubeadm_join_out.rc == 0
    - name: Create kube directory
      ansible.builtin.file:
        path: /home/k/.kube
        state: directory
        owner: k
        group: k
        mode: "0700"
    - name: Copy kubeconfig to user's home directory
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/k/.kube/config
        remote_src: true
        owner: k
        group: k
        mode: "0600"
- name: Add taint to control plane
  hosts: localhost
  tasks:
    - name: Allow pods to be scheduled on control plane
      become: false
      environment:
        KUBECONFIG: /home/kashyap/.kube/kupi
      kubernetes.core.k8s_taint:
        name: "{{ item }}"
        state: absent
        taints:
          - key: "node-role.kubernetes.io/control-plane"
            effect: "NoSchedule"
      loop:
        - rpi5-01
        - rpi5-02
        - rpi5-03
      delegate_to: localhost
